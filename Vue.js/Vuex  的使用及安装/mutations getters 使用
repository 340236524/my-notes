不能直接改变 store 中的状态 所以就用到了 mutations

1.(1)   const store = new Vuex.Store({
            state:{  
               count：0
            },
            mutations: {
                increment(state,index) {
                    state.count = index
                }
            },
            getters:{
                getTodoById: (state) => (id) => {
                    return state.todos.find(todo => todo.id === id)
                }
            }
        });

        find 和 filter 的区别    find返回的是对象 {}   filter返回的是数组 []
        
1.(2)   const state = { 
            count:'0' /* 这里面写数据内容 */
        };

        const mutations = {
            increment(state,index) {
                state.count = index
            }
        }
        
        const getters = {
            getTodoById: (state) => (id) => {
                return state.todos.find(todo => todo.id === id)
            }
        }

        const store = new Vuex.Store({
            state,
            mutations,
            getters
        });

2. 可以在点击事件 函数中直接使用  this.$store.commit('increment')  
this.$store.commit('increment') 代表  increment(state,index) 函数
this.$store.getters.getTodoById(xxx)   xxx 代表穿的参数


注释： vuex increment函数的使用

在需要改变数据的页面 
可以携带参数 this.$store.commit('increment',xxxx)      /* xxx 代表参数 */
    methods:{
        click(index){
            this.$store.commit('increment',index)
        }
    }
    在vuex  mutations控制函数并接收参数
    mutations: {
        increment (state, xxx) {
            state.count += xxx
        }
    }

在需要获取数据的页面使用 this.$store.state   console.log(this.$store.state)